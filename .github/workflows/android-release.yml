name: Android Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment variables
        run: |
          echo "APP_VERSION=$(cat app.json | jq -r '.expo.version')" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "APP_NAME=$(cat app.json | jq -r '.expo.name')" >> $GITHUB_ENV
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        run: |
          docker buildx build \
            --build-arg APP_VERSION="${{ env.APP_VERSION }}" \
            --build-arg COMMIT_HASH="${{ env.COMMIT_HASH }}" \
            --build-arg BRANCH_NAME="${{ env.BRANCH_NAME }}" \
            --build-arg APP_NAME="${{ env.APP_NAME }}" \
            -t umaps-android \
            --load .
      
      - name: Build APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          mkdir -p output
          docker run --rm \
            -e KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD} \
            -e KEY_PASSWORD=${KEY_PASSWORD} \
            -v "$(pwd)/output:/output" \
            umaps-android

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: output/*.apk
          name: Release ${{ env.APP_VERSION }}
          body: |
            Release ${{ env.APP_VERSION }}
            Commit: ${{ env.COMMIT_HASH }}
            Branch: ${{ env.BRANCH_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}